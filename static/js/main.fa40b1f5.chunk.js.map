{"version":3,"sources":["components/header/HeaderTodo.js","components/button-status/ButtonStatus.js","components/search/SearchBlock.js","components/entry-field/EntryField.js","components/TodoList/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/app/App.js","index.js"],"names":["HeaderTodo","toDo","done","className","ButtomStatus","button","name","label","this","props","onFilterChange","filter","buttonElem","map","clazz","type","key","onClick","Component","SearchBlock","state","term","onSearchChange","event","target","value","setState","placeholder","onChange","EntryFieled","onlabelChange","onSubmit","onitemAdded","preventDefault","emptyField","TodoListItem","onDeleted","onToggleImportant","onToggleDone","classNames","activeClassImportant","important","checked","TodoList","todos","elemTodo","onChangeLabel","elem","id","newId","App","todoDate","prevState","el","addItem","text","newItem","onToggleProperty","prevName","newArr","search","arr","item","toLowerCase","indexOf","isEdit","visibleItems","doneCount","length","todoCount","console","log","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa40b1f5.chunk.js","sourcesContent":["import React from 'react'\r\nimport './headerTodo.css'\r\n\r\nconst HeaderTodo =({toDo, done})=>{\r\n    return (\r\n        <div className='header-block'>\r\n            <h1 className='header'>My Todo list</h1>\r\n    <p className='status'>{toDo} more to do, {done} done</p>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default HeaderTodo","import React, { Component } from 'react'\r\n\r\nexport default class ButtomStatus extends Component {\r\n\r\n    button =[\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'completed', label: 'Completed'}\r\n    ]\r\n\r\n    render() {\r\n\r\n        const {onFilterChange, filter} = this.props\r\n\r\n        const buttonElem = this.button.map(({name, label})=>{\r\n            \r\n            const clazz = filter === name ? 'btn-info' : 'btn-outline-info'\r\n            return( \r\n            <button \r\n                type='button' \r\n                className={`btn ${clazz}`}\r\n                key={name}\r\n                onClick={()=> onFilterChange(name)}>\r\n                    {label}\r\n             </button>)\r\n        })\r\n        return (\r\n            <div className='btn-group ButtomStatus'>\r\n                {buttonElem}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport './search.css'\r\nimport ButtomStatus from '../button-status/ButtonStatus'\r\n\r\nexport default class SearchBlock extends Component{\r\n\r\n    state={\r\n        term: ''\r\n    }\r\n\r\n    onSearchChange=(event)=>{\r\n        const term = event.target.value\r\n        this.setState({ term })\r\n        this.props.onSearchChange(term)\r\n    }\r\n\r\n    render(){\r\n        const {onFilterChange, filter} = this.props\r\n        return (\r\n            <div className='search'>\r\n    \r\n                <input type='text' \r\n                    placeholder='search' \r\n                    className='form-control search-panel'\r\n                    value={this.state.term}\r\n                    onChange={this.onSearchChange} />\r\n                <ButtomStatus\r\n                    filter={filter}\r\n                    onFilterChange={onFilterChange} />\r\n            </div>\r\n        )\r\n    \r\n    }\r\n    \r\n}\r\n","import React, { Component } from 'react'\r\nimport './entryField.css'\r\n\r\n\r\nexport default class EntryFieled extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onlabelChange = (event) => {\r\n        this.setState({\r\n            label: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        const { onitemAdded } = this.props\r\n        const { label } = this.state\r\n        event.preventDefault()\r\n        onitemAdded(label)\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    }\r\n\r\n    emptyField = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className='entryField d-flex'\r\n                onSubmit={this.state.label ? this.onSubmit : this.emptyField}>\r\n\r\n                <input type='text'\r\n                    placeholder='Введите задачу'\r\n                    className='form-control'\r\n                    onChange={this.onlabelChange}\r\n                    value={this.state.label} />\r\n\r\n                <button className='btn btn-info'>Add item</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './TodoListItem.css'\r\n\r\nconst TodoListItem = ({ onDeleted, onToggleImportant, onToggleDone, done, label, important }) => {\r\n\r\n    let classNames = 'text-left todo-text'\r\n    let activeClassImportant = 'btn-outline-info'\r\n\r\n    if (done) {\r\n        classNames += ' done'\r\n    }\r\n\r\n    if (important) {\r\n        classNames += ' important'\r\n        activeClassImportant = 'btn-info'\r\n    }\r\n\r\n    return (\r\n        <div className='list-group-item'>\r\n            <div className='list_item'>\r\n                <div className='checkbox-block'>\r\n                    <input type='checkbox'\r\n                        className='checkbox'\r\n                        onChange={onToggleDone}\r\n                        checked={done}\r\n                    />\r\n                    <p className={classNames}>{label}</p>\r\n                </div>\r\n\r\n                <div className='btn-group'>\r\n                    <button onClick={onDeleted} className='btn btn-outline-info'>del</button>\r\n                    <button onClick={onToggleImportant} className={`btn ${activeClassImportant}`}>important</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoListItem\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport TodoListItem from './TodoListItem/TodoListItem';\r\n\r\n\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleDone, onToggleImportant, onChangeLabel, }) => {\r\n\r\n    const elemTodo = todos.map((elem) => {\r\n        return (\r\n            <TodoListItem\r\n                key={elem.id}\r\n                {...elem}\r\n                onToggleDone={() => onToggleDone(elem.id)}\r\n                onToggleImportant={() => onToggleImportant(elem.id)}\r\n                onDeleted={() => onDeleted(elem.id)}/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul className='list-group'>\r\n            {elemTodo}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport HeaderTodo from '../header/HeaderTodo';\r\nimport './app.css'\r\nimport SearchBlock from '../search/SearchBlock';\r\nimport EntryFieled from '../entry-field/EntryField';\r\nimport TodoList from '../TodoList/TodoList';\r\n\r\n\r\nlet newId = 100\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        todoDate: [],\r\n        term: '',\r\n        filter: 'all',\r\n\r\n    }\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label, important: false, done: false, isEdit: false, id: newId++\r\n        }\r\n    }  //создаём массив объектов\r\n\r\n    onDeleted = (id) => {\r\n        this.setState(prevState => ({\r\n            todoDate: prevState.todoDate.filter(el => el.id !== id)\r\n        }))\r\n    }  //удаляем объект из массива по id\r\n\r\n    addItem = (text) => {\r\n        const newItem = { label: text, important: false, done: false, id: newId++ }\r\n\r\n        this.setState(({ todoDate }) => {\r\n            const newArr = [\r\n                newItem, ...todoDate\r\n            ]\r\n            return {\r\n                todoDate: newArr\r\n            }\r\n        })\r\n    } // добавляем объект в массив \r\n\r\n    onToggleProperty = (id, prevName) => {\r\n\r\n        this.setState(prevState => {\r\n            const newArr = prevState.todoDate.map(elem => {\r\n                if (elem.id === id) {\r\n                    elem[prevName] = !elem[prevName]\r\n                }\r\n                return elem\r\n            })\r\n            return {\r\n                newArr\r\n            }\r\n        })\r\n    } \r\n\r\n    onToggleImportant = (id) => {\r\n        return {\r\n            todoDate: this.onToggleProperty(id, 'important')\r\n        }\r\n    } // выделяем текст жирным\r\n\r\n    onToggleDone = (id) => {\r\n        return {\r\n            todoDate: this.onToggleProperty(id, 'done')\r\n        }\r\n    } // зачеркиваем текст\r\n\r\n    search = (arr, term) => {\r\n        if (term === '') {\r\n            return arr\r\n        }\r\n        return arr.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n        })\r\n    } // получаем массив и фильтруем по условию поиска \r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term })\r\n    } // props для блока SearchBlock который перезаписывае стайт Арр\r\n\r\n    filter = (arr, filter) => {\r\n        switch (filter) {\r\n            case 'all': return arr\r\n            case 'active':\r\n                return arr.filter((item) => !item.done)\r\n            case 'completed':\r\n                return arr.filter((item) => item.done)\r\n            default: return arr\r\n        }\r\n\r\n    } \r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoDate, term, filter } = this.state\r\n\r\n        const visibleItems = this.filter(this.search(todoDate, term), filter)\r\n\r\n        const doneCount = todoDate.filter(el => el.done).length\r\n\r\n        const todoCount = todoDate.length - doneCount\r\n        console.log(todoDate);\r\n        return (\r\n            <div className='app'>\r\n                <HeaderTodo toDo={doneCount} done={todoCount} />\r\n                <SearchBlock\r\n                    filter={filter}\r\n                    onFilterChange={this.onFilterChange}\r\n                    onSearchChange={this.onSearchChange} />\r\n                <EntryFieled onitemAdded={this.addItem} />\r\n                <TodoList\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone}\r\n                    onDeleted={this.onDeleted}\r\n                    todos={visibleItems}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDom from 'react-dom'\nimport App from './components/app/App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\n\n\n\nReactDom.render(<App />, document.getElementById('root'))\n\nif(module.hot){\n    module.hot.accept()\n}"],"sourceRoot":""}